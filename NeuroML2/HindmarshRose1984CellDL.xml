<Lems xmlns="http://www.neuroml.org/lems/0.6"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.6 https://raw.github.com/LEMS/LEMS/master/Schemas/LEMS/LEMS_v0.6.xsd">

<!--

    LEMS definition of the Hindmarsh Rose neuron model (see below
    for reference).
    
    The Hindmarsh Rose model consists in a fast spiking subsystem,
    which is a generalization of the Fitzhugh-Nagumo (aka
    Bonhoeffer-van der Pol) oscillator, coupled to a slower subsystem
    which allows the system to fire bursts of spikes.

    Hindmarsh J. L., and Rose R. M. (1984) A model of neuronal
    bursting using three coupled first order differential equations.
    Proc. R. Soc. London, Ser. B 221:87â€“102.

-->

<ComponentType name="hindmarshRoseCell1984CellDL"
    extends="baseCellMembPotDL"
    description="
    The Hindmarsh Rose model is a simplified point cell model which
    captures complex firing patterns of single neurons, such as
    periodic and chaotic bursting. It in a fast spiking subsystem,
    which is a generalization of the Fitzhugh-Nagumo system, coupled
    to a slower subsystem which allows the model to fire bursts. The
    dynamical variables x,y,z correspond to the membrane potential, a
    recovery variable, and a slower adaptation current, respectively.
    ">
    
    <Parameter name="a" dimension="none" description="cubic term in x nullcline"/>
    <Parameter name="b" dimension="none" description="quadratic term in x nullcline"/>
    <Parameter name="c" dimension="none" description="constant term in y nullcline"/>
    <Parameter name="d" dimension="none" description="quadratic term in y nullcline"/>
    <Parameter name="r" dimension="none" description="timescale separation between slow and fast subsystem (r greater than 0; r much less than 1)"/>
    <Parameter name="s" dimension="none" description="related to adaptation"/>
    <Parameter name="x1" dimension="none" description="related to the system's resting potential"/>

    <!-- Initial Conditions -->
    <Parameter name="x0" dimension="none"/>
    <Parameter name="y0" dimension="none"/>
    <Parameter name="z0" dimension="none"/>

    <Attachments name="synapses" type="basePointCurrentDL"/>

    <Constant name="MSEC" dimension="time" value="1ms"/>

    <Exposure name="x" dimension="none"/>
    <Exposure name="y" dimension="none"/>
    <Exposure name="z" dimension="none"/>
    <Exposure name="phi" dimension="none"/>
    <Exposure name="chi" dimension="none"/>
    <Exposure name="rho" dimension="none"/>
    <!-- <Exposure name="V" dimension="none"/> --> <!-- Already exposed from baseCellMembPotDL -->
    <Exposure name="ISyn" dimension="none"/>
    <Exposure name="spiking" dimension="none"/>
    
    <Dynamics>
        
        <StateVariable name="x" dimension="none" exposure="x"/>
        <StateVariable name="y" dimension="none" exposure="y"/>
        <StateVariable name="z" dimension="none" exposure="z"/>
        <StateVariable name="spiking" dimension="none" exposure="spiking"/>
        
        <DerivedVariable name="ISyn" dimension="none" exposure="ISyn" select="synapses[*]/I" reduce="add" />

        <DerivedVariable name="phi" dimension="none" exposure="phi" value="y - a * x^3 + b * x^2 + ISyn"/>
        <DerivedVariable name="chi" dimension="none" exposure="chi" value="c - d * x^2 - y"/>
        <DerivedVariable name="rho" dimension="none" exposure="rho" value="s * ( x - x1 ) - z"/>
        <DerivedVariable name="V" dimension="none" exposure="V" value="x"/>

        <TimeDerivative variable="x" value="(phi - z) / MSEC"/>
        <TimeDerivative variable="y" value="chi / MSEC"/>
        <TimeDerivative variable="z" value="r * rho / MSEC"/>
        
        <OnStart>
            <StateAssignment variable="x" value="x0"/>
            <StateAssignment variable="y" value="y0"/>
            <StateAssignment variable="z" value="z0"/>
        </OnStart>

        <OnCondition test="V .gt. 0 .and. spiking .lt. 0.5">
            <StateAssignment variable="spiking" value="1"/>
            <EventOut port="spike"/>
        </OnCondition>

        <OnCondition test="V .lt. 0">
            <StateAssignment variable="spiking" value="0"/>
        </OnCondition>
        
    </Dynamics>
    
</ComponentType>

<!-- parameter set for regular saddle-node/homoclinic (aka square wave) busting -->
<hindmarshRoseCell1984CellDL id="hr_regular0" a="1.0" b="3.0" c="-3.0"
    d="5.0" s="4.0" x1="-1.3" r="0.002"
    x0="-1.1" y0="-9" z0="1.0"/>

</Lems>

